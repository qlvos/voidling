server {

  server_name beta.standardvoids.com, uat.standardvoids.com;

  root /usr/share/nginx/html;
  index index.html index.htm;
  location / {
    proxy_pass http://${VLING_FRONTEND_SERVICE_NAME_UAT};
  }

   listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/standardvoids.com/fullchain.pem; # mana                                                                                                                                                             ged by Certbot
   ssl_certificate_key /etc/letsencrypt/live/standardvoids.com/privkey.pem; # ma                                                                                                                                                             naged by Certbot
   #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

  server_name standardvoids.com, www.standardvoids.com;

  auth_basic "standard and voids";
  auth_basic_user_file /etc/apache2/htpasswd;

  root /usr/share/nginx/html;
  index index.html index.htm;
  location / {
    try_files $uri $uri/ =404;
  }

  error_page 404 /404.html;
  location = /404.html {
    internal;
  }
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    internal;
  }

  location /api/whitelist {
      proxy_pass http://${VLING_BACKEND_SERVICE_NAME}:47900/api/whitelist;
  }

  location /api/evaluation {
      proxy_pass http://${VLING_BACKEND_SERVICE_NAME}:47900/api/evaluation;
  }

  location /ws {
      proxy_pass http://${VLING_BACKEND_SERVICE_NAME}:47901;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-Proto $scheme;
  }

   listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/standardvoids.com/fullchain.pem; # mana                                                                                                                                                             ged by Certbot
   ssl_certificate_key /etc/letsencrypt/live/standardvoids.com/privkey.pem; # ma                                                                                                                                                             naged by Certbot
   #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}